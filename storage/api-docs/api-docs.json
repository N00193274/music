{
    "openapi": "3.0.0",
    "info": {
        "title": "Allbum API",
        "description": "Rory Simple Album API",
        "contact": {
            "email": "rory.mc9@iadt.ie"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0.0"
    },
    "paths": {
        "/api/albums": {
            "get": {
                "tags": [
                    "Albums"
                ],
                "summary": "Display a listing of the resource.",
                "description": "Displays all the albums",
                "operationId": "735609843dcfb89ee4e12e340eddca25",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Albums"
                ],
                "summary": "Create new Album",
                "description": "Stores Album in DB",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "genre",
                                    "artist",
                                    "releaseyear"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "genesis"
                                    },
                                    "genre": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "punk"
                                    },
                                    "artist": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "t-dog"
                                    },
                                    "releaseyear": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "database updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": ""
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/albums/{id}": {
            "get": {
                "tags": [
                    "Albums"
                ],
                "summary": "// Here I specify the id is how the api finds the target album in the table\nDisplay the specified resource.",
                "description": "gets album by id",
                "operationId": "71e9c4179582355e89419e6f6994c418",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Album id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Albums"
                ],
                "summary": "Delete an Album",
                "description": "Delete Album",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of album",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": "204"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/artists": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Display a listing of the resource.",
                "description": "Displays all artists",
                "operationId": "2c8aed1387cca1c65d98da7ee11ac926",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Artists"
                ],
                "summary": "Create new Artist",
                "description": "Stores a new Artist in DB",
                "operationId": "stage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "age",
                                    "pob"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "swaggerz"
                                    },
                                    "age": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "22"
                                    },
                                    "pob": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "LA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "database updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": ""
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/artists/{id}": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Display the specified resource.",
                "description": "gets artist by id",
                "operationId": "d0b68c06b8bc310fbe24c6d3ea80dac3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Artist id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Artists"
                ],
                "summary": "Update the specified resource in storage.",
                "description": "gets artist by id",
                "operationId": "5a5632ea389f9a05336f8d035f5a44c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Artist id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Artists"
                ],
                "summary": "Delete an Artist",
                "description": "Delete Artist",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of artist",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": "204"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}